import { ParserMethod, IRuleConfig, CstNode, CstParser } from "./chevrotain";
export declare class CommentCstParser extends CstParser {
    protected RULE<F extends () => void>(name: string, implementation: F, config?: IRuleConfig<CstNode>): ParserMethod<Parameters<F>, CstNode>;
    LA(howMuch: any): import("@chevrotain/types").IToken;
    cstPostTerminal(key: string, consumedToken: any): void;
}
export declare class PbxprojParser extends CommentCstParser {
    constructor();
    head: ParserMethod<[], CstNode>;
    array: ParserMethod<[], CstNode>;
    object: ParserMethod<[], CstNode>;
    objectItem: ParserMethod<[], CstNode>;
    identifier: ParserMethod<[], CstNode>;
    value: ParserMethod<[], CstNode>;
}
export declare const BaseVisitor: new (...args: any[]) => import("@chevrotain/types").ICstVisitor<any, any>;
export declare function parse(text: string): CstNode;
//# sourceMappingURL=parser.d.ts.map